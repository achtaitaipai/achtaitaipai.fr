---
import { nanoid } from "nanoid";
const maskId = nanoid();
---

<c-theme-switch class="loading">
  <button title="Basculer entre thème clair et thème sombre">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      fill="currentColor"
      stroke="none"
      width="1.6em"
      height="1.6em"
    >
      <mask id={maskId}>
        <rect x="0" y="0" width="24" height="24" fill="white"></rect>
        <circle cx="12" cy="12" r="4.5" class="mask" fill="black"></circle>
      </mask>
      <circle cx="12" cy="12" r="6" class="bg" mask={`url(#${maskId})`}
      ></circle>
      <circle cx="12" cy="3" r="1.2" class="point" style="--_index: 0;"
      ></circle>
      <circle cx="18.36" cy="6.36" r="1.2" class="point" style="--_index: 4;"
      ></circle>
      <circle cx="21" cy="12" r="1.2" class="point" style="--_index: 1;"
      ></circle>
      <circle cx="18.36" cy="18.36" r="1.2" class="point" style="--_index: 5;"
      ></circle>
      <circle cx="12" cy="21" r="1.2" class="point" style="--_index: 2;"
      ></circle>
      <circle cx="6.36" cy="18.36" r="1.2" class="point" style="--_index: 6;"
      ></circle>
      <circle cx="3" cy="12" r="1.2" class="point" style="--_index: 3;"
      ></circle>
      <circle cx="6.36" cy="6.36" r="1.2" class="point" style="--_index: 7;"
      ></circle>
    </svg>
  </button>
</c-theme-switch>

<script>
  customElements.define(
    "c-theme-switch",
    class ThemeSwitch extends HTMLElement {
      #btn: HTMLButtonElement;
      constructor() {
        super();
        this.#btn = this.querySelector("button")!;
      }
      connectedCallback() {
        this.#btn.addEventListener("click", this.#handleClick);
      }
      disconnectedCallback() {
        this.#btn.removeEventListener("click", this.#handleClick);
      }
      #handleClick = () => {
        const newTheme =
          document.documentElement.classList.contains("dark")
            ? "light"
            : "dark";
        document.documentElement.classList.toggle("dark", newTheme === "dark");
        localStorage.setItem("theme", newTheme);
      };
    }
  );
</script>

<style>
  button {
    padding: var(--space-m);
    color: var(--gray-11);
    display: inline-flex;
    align-items: center;
    text-decoration: none;
    background-color: transparent;
    font-size: var(--step-1);
  }

  button:where(:hover, :focus-visible) {
    color: var(--gray-12);
  }

  svg {
    transform: rotate(-130deg);
    transition: transform 0.3s 0.3s;
  }

  .mask {
    transform: translate(0, 12%);
    transition: transform 0.3s;
  }

  .point {
    opacity: 0;
    transition: opacity 0.3s;
  }

  :global(.dark) svg {
    transform: rotate(0);
    transition-duration: 0s;
  }

  :global(.dark) .mask {
    transform: translateX(0);
  }

  :global(.dark) .point {
    opacity: 1;
    transition-delay: calc(var(--_index) * 0.02s + 0.3s);
  }
</style>
