---
export type Props = {
  before?: {
    url: string;
    title: string;
  };
  after?: {
    url: string;
    title: string;
  };
};

const { before, after } = Astro.props;
---

<nav>
  {
    before && (
      <a href={before.url} class="prev">
        <span class="arrow">&larr;</span>
        <span class="label">Précédent</span>
        <span class="title line-clamp">{before.title}</span>
      </a>
    )
  }
  {
    after && (
      <a href={after.url} class="next">
        <span class="label">Suivant</span>
        <span class="title line-clamp">{after.title}</span>
        <span class="arrow">&rarr;</span>
      </a>
    )
  }
</nav>

<style>
  nav {
    max-inline-size: var(--main-width);
    margin-inline: auto;
    margin-block-start: var(--space-2xl);
    display: grid;
    gap: var(--space-s);
    @media (width > 55rem) {
        grid-template-columns: 1fr 1fr;
    }
  }

  a {
    flex-grow: 1;
    display: grid;
    align-items: center;
    column-gap: var(--space-s);
    border: solid 1px var(--gray-6);
    padding-block: var(--space-xs);
    padding-inline: var(--space-s);
    text-decoration: none;
    color: var(--gray-12);
  }

  a:where(:hover,:focus-visible) {
    border-color: var(--gray-8);
  }

  .prev:where(:hover,:focus-visible) > *{
    transform: translateX(-.3rem);
  }

  .next:where(:hover,:focus-visible) > *{
    transform: translateX(.3rem);
  }

  .prev {
    grid-template:
      "arrow label"
      "arrow title" / auto 1fr;
  }

  .next {
    grid-column: -2;
    grid-template:
      "label arrow"
      "title arrow"  / 1fr auto;
    justify-items: end;
  }
  .arrow {
    grid-area: arrow;
    font-size: var(--step-1);
    transition: transform .3s;
  }

  .label {
    grid-area: label;
    color: var(--gray-11);
    transition: transform .3s .08s;
  }
  .title {
    grid-area: title;
    font-size: var(--step-1);
    transition: transform .3s .08s;
  }
</style>
