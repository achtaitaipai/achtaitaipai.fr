---
import type { GetStaticPaths } from "astro";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import Pagination from "src/components/Pagination.astro";
import Prose from "src/components/Prose.astro";
import Base from "src/layouts/Base.astro";
import { displayDate } from "src/libs/date.ts";

const { post: slug } = Astro.params;

const entries = (await getCollection("posts")).sort(
  (a, b) => b.data.date.getTime() - a.data.date.getTime()
);
const entry = await getEntry("posts", slug);
const entryIndex = entries.findIndex((el) => el.slug === slug);

const { title, date } = entry.data;
const { Content } = await entry.render();

const before = entries[entryIndex - 1];
const after = entries[entryIndex + 1];

export const getStaticPaths = (async () => {
  const entries = await getCollection("posts");
  return entries.map((el) => ({ params: { post: el.slug } }));
}) satisfies GetStaticPaths;
---

<Base title={entry.data.title}>
  <main>
    <article>
      <header>
        <h1>{title}</h1>
        <time datetime={date.toDateString()}>{displayDate(date)}</time>
      </header>
      <Prose {Content} />
    </article>
    <Pagination
      before={before
        ? { url: `/blog/${before.slug}`, title: before.data.title }
        : undefined}
      after={after
        ? { url: `/blog/${after.slug}`, title: after.data.title }
        : undefined}
    />
  </main>
  <footer>
      <a href={`https://github.com/achtaitaipai/achtaitaipai.fr/blob/main/src/content/posts/${slug}/index.mdx`}>Modifier sur github</a>
  </footer>
</Base>

<style>
article{
    max-inline-size: var(--main-width);
    margin-inline: auto;
  }
  header {
    margin-block-end: var(--space-2xl);
  }

  header h1 {
    font-size: var(--step-7);
    max-inline-size: 15ch;

  }

  header time {
    display: block;
    margin-block-start: var(--space-xs);
  }

  footer {
    margin-block: var(--space-l) var(--space-m);
    font-size: var(--step--1);
  }

  footer{
    max-inline-size: var(--main-width);
    margin-inline: auto;
    padding-block: var(--space-s);
    border-block-start: 1px solid currentColor;
    display: flex;
  }

</style>
